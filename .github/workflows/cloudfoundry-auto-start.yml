name: CloudFoundry Auto Start

on:
  schedule:
    - cron: '20 0 * * *'  # 每天UTC时间0:20（北京时间8:20）
  workflow_dispatch:       # 允许手动触发

jobs:
  start-cf-apps:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'  # 启用pip缓存加速依赖安装

    - name: Create and activate virtual environment
      run: |
        python -m venv .venv
        echo "VIRTUAL_ENV=$PWD/.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH  # 将虚拟环境bin目录加入PATH，避免每次手动source

    - name: Install dependencies with compatible versions
      run: |
        python -m pip install --upgrade pip
        # 安装指定版本的依赖以确保兼容性
        pip install "python-telegram-bot==20.7"
        pip install requests
        # 安装额外的调试工具，方便问题排查
        pip install httpx  # 可选，用于更详细的HTTP调试

    - name: Verify installations
      run: |
        echo "Python version:"
        python --version
        echo "Virtual environment path:"
        echo $VIRTUAL_ENV
        echo "Installed packages:"
        pip list | grep -E "telegram|requests|urllib3"

    - name: Run CloudFoundry Auto Start
      env:
        # 环境变量配置
        CF_USERNAME_1: ${{ secrets.CF_USERNAME_1 }}
        CF_PASSWORD_1: ${{ secrets.CF_PASSWORD_1 }}
        CF_API_ENDPOINT_1: ${{ secrets.CF_API_ENDPOINT_1 }}
        CF_ORG_1: ${{ secrets.CF_ORG_1 }}
        CF_SPACE_1: ${{ secrets.CF_SPACE_1 }}
        CF_APPS_1: ${{ secrets.CF_APPS_1 }}
        
        CF_USERNAME_2: ${{ secrets.CF_USERNAME_2 }}
        CF_PASSWORD_2: ${{ secrets.CF_PASSWORD_2 }}
        CF_API_ENDPOINT_2: ${{ secrets.CF_API_ENDPOINT_2 }}
        CF_ORG_2: ${{ secrets.CF_ORG_2 }}
        CF_SPACE_2: ${{ secrets.CF_SPACE_2 }}
        CF_APPS_2: ${{ secrets.CF_APPS_2 }}
        
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        # 增加调试日志级别
        LOG_LEVEL: INFO
      run: |
        python cf_auto_start.py

    - name: Upload logs on failure
      if: failure()  # 只有在失败时才执行
      uses: actions/upload-artifact@v4
      with:
        name: cf-auto-start-logs
        path: |
          *.log
          ~/.cf/logs/  # 如果CF CLI有日志的话
        retention-days: 5
