name: Cloud Foundry Auto Start

on:
  schedule:
    - cron: '20 0 * * *'  # 北京时间8:20执行（UTC+0 0:20）
  workflow_dispatch:       # 支持手动触发

jobs:
  start-cf-apps:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # 防止工作流卡死

    steps:
    - name: 检出代码
      uses: actions/checkout@v4  # 确保拉取最新代码

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # 与脚本兼容的版本
        cache: 'pip'  # 缓存依赖（依赖requirements.txt）

    - name: 创建并激活虚拟环境
      run: |
        python -m venv .venv
        echo "VIRTUAL_ENV=$PWD/.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH  # 无需每次手动source

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt  # 从依赖文件安装，确保版本正确

    - name: 验证依赖版本
      run: |
        python --version
        pip list | grep -E "telegram|requests"  # 确认版本匹配（telegram-bot==20.7）

    - name: 运行CF自动启动脚本
      env:
        # CF账号1配置
        CF_USERNAME_1: ${{ secrets.CF_USERNAME_1 }}
        CF_PASSWORD_1: ${{ secrets.CF_PASSWORD_1 }}
        CF_ORG_1: ${{ secrets.CF_ORG_1 }}
        CF_SPACE_1: ${{ secrets.CF_SPACE_1 || 'dev' }}
        CF_APPS_1: ${{ secrets.CF_APPS_1 }}
        # CF账号2配置
        CF_USERNAME_2: ${{ secrets.CF_USERNAME_2 }}
        CF_PASSWORD_2: ${{ secrets.CF_PASSWORD_2 }}
        CF_ORG_2: ${{ secrets.CF_ORG_2 }}
        CF_SPACE_2: ${{ secrets.CF_SPACE_2 || 'dev'
